# SSL certificates;
ssl_certificate			/etc/ssl/host.pem;
ssl_certificate_key		/etc/ssl/host.key;

# SSL Poodle fix
ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;  # donâ€™t use SSLv3 ref: POODLE

# set DNS;
resolver 10.10.1.1 ipv6=off;

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# Redirect HTTP to HTTPS;
server {
  server_name _;

  # HTTP authentication backend;
  set $auth_backend SETTINGS_AUTH_BACKEND;

  # Proxy all the request to the backend;
  location / {
    proxy_cache off;
    proxy_pass $auth_backend;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # The backend redirects the request to /reproxy;
  location /reproxy {
    # make this location internal-use only;
    internal;

    # set $reproxy variable to the value of X-Reproxy-URL header;
    set $reproxy $upstream_http_x_reproxy_url;

    # proxy request to the received X-Reproxy-URL value;
    proxy_buffering off;
    proxy_pass $reproxy;
  }

  # Redirect to a secure connection
  location /secure {
    return 301 https://$host$request_uri;
  }
  
}

# The PROXY;
server {
  # HTTP authentication backend;
  set $auth_backend SETTINGS_AUTH_BACKEND;
  listen 443 ssl;
  server_name _;

  # Proxy all the request to the backend;
  location / {
    proxy_cache off;
    proxy_pass $auth_backend;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # The backend redirects the request to /reproxy;
  location /reproxy {
    # make this location internal-use only;
    internal;

    # set $reproxy variable to the value of X-Reproxy-URL header;
    set $reproxy $upstream_http_x_reproxy_url;

    # proxy request to the received X-Reproxy-URL value;
    proxy_buffering off;
    proxy_pass $reproxy;

    # Websocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_read_timeout 86400;

    # Pass header
    set $user $upstream_http_x_remote_user;
    proxy_set_header X-Remote-User $user;
  }
}

